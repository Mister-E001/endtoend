list of fixes to do:
July 20

client.cpp:

- fix message of user leaving not sending
- fix annoying bug with pub key not being loaded for a client
- July 22 | fix getch not allowing spaces in messaging receiving while loop | fixed 

server.cpp:

- server randomly crashing | fixed July 24 2024
- multiple clients joining past 2 clients | fixed July 21
- make another user be able to join after the other one leaves
- July 21: add support for 3 clients | task is a bit complicated; | gonna do on stream July 21 | 

for all when done actually with the project: 

- clean up code
- make more efficient if possible

ideas:


--------------------
done:

make server ask when starting if you want a password or no and let it hash the user entered password | done July 24 2024
make a separate getch for the server | done July 24 2024
add a getch mode to your own getch header as an arg | done July 24 2024
make a server and client mode for getch_getline | done July 24 2024
send a signal to the client 1==passwordneeded 2==nopasswordneeded | done July 24 2024
handle ctrl c in initmenu | done July 24 2024
make it so the server deletes the user from clientHash thing vector if it cant then stop the whole server | done July 24 2024
set a password minimum requirement for the server | done July 24 2024
make a thread, detach it, and let it run pings every 2 seconds from the client so the client disconnects when the server does too | done July 24 2024
add to where the server pings the clientSocket every 2 seconds and the pinging in receiveMessages function in client side say if received message is == 0 bytes then that is a ping from the server and ignore it
and also make the client ping the server every few seconds for better real time disconnecting | done July 24 2024
encrypt the user password that they enter when starting the server using the server public key | done July 25 2024
implement ssl/tls connection using open-ssl from libssl-dev in the server and client too and save generated keys in base 64 as .pem | done July 31 2024 at 12:59 am took 3 days
make a specific folder for txt files that are needed by the server or client | done July 27 2024
delete usersactive.txt file after client leaves | July 29 2024
fix leave message not sending sometimes | fixed august 1 2024
fix the server not accepting clients after the other client got the password wrong. basically handle that and delete all data of them properly. | fixed august 1 2024
switch to libcurl | done august 1 2024
add rate limiting | august 2 2024
make a script to simulate bruteforcing the server | done august 3 2024
properly delete anything the server had to do when the client connected on the server | done august 1 2024
handle limit reached and users trying to join while ip on timer right after the accepting of the socket check | done august 2 2024
find a way to send to ctx of the server and its sock to getch | done august 2 2024
fix seg fault in server after users bruteforce the password many fetch | fixed august 3 2024
find a better place to run the function of the countdown stuff | done august 2 2024
add join message when a client joins | done august 5 2024
add option for server to need to accept a users request to join the server | first check if user is black listed or rate limited or limit of users reached | done august 5 2024
make tries reset after 90 seconds if they didn't connect in that time again | done august 5
print to the side of your getch thing while taking input | done august 7 2024
fix server without password running | done august 7

------------------------
not done:

make user and server commands

send back the active users .txt again when the user leaves and update it

make it so the usersactive file is being read every 2 seconds aswell the same way your pinging the server for if a 2nd client joins then receive the key from them after the other client leaves

make it so if there is 2 people then one user leaves the client updates the users active file from their side and a leave message is marked with a symbol so we know when a user left and then when another user joins again it says "2!" in the file meaning they are the other user that joined and it recieves their key and enters them in the chat

make the server keep pinging the client to see if they are still in the chat when waiting for another user. //MAKES NO FUCKIGN SENSE NERD

count how much errors in the password they got in a row if it is 5 in under a 90 seconds or in a row then it blacklists their ip

setup server commands but before the server can execute them they need to enter the server password for every command

fhdljgkshljgdkfhjlkdfgshjlkdgfshjklfdgshjklhklkklklklklklklklklklklklklklklklklklklklklklklkll

detect if user left in the background while waiting for another user to connect on server

when bug happens or client leaves during sending of key a broken pipe happens

MAYBE INSTEAD OF ACTUALLY MAKING A CONNECTION TO THE SERVER AS A PING THE SERVER MAKES A TEMP HOST HTTP THINGY AND THE CLIENT PULLS THAT EVERY 2 SECOINDS AND WHEN IT FAILS THEN THAT MEANS THE SERVER IS DOWN BECAUSE THE TEMP HTTP THINGY IS CLOSED AFTER THE SERVER IS. RUN IT IN GETCH THREAD IN THE BACKGROUND. MAYBE ALSO DO IT ON SERVER AND CLIENT MAKES HTTP THINGY IN THEIR SIDE

make the recievedPublicKey use the new clients key

make like a unique tag or something that the server knows its from our client script and not some random client script or something idk but make it work
Fix error: Error: bad method [beast.http:12] when a client attempts to pull cert by making an http request using telnet

test compile time before warnings removed and after

----------------------------
ncurses switching: 

dont worry about time formatting since switching wont really matter



if i want:

if you want include an sql server too

find a safer way to send certs maybe

delete the key of the other user if you want after connecting to the chat since they are already loaded into memory and being used from there not relying on the file

switch the whole server to be in ncurses and have like 2 buttons on top for command mode or some stuff liek thta

2018.05.20 16:55:20 LOG5[1]: make logs look like this
